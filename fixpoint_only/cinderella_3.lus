const C = 3.0;

-- node bucket_val(fill_amt: real; empty: bool) returns (level: real);
-- let
--    level = 0.0 ->
-- 	   (if (empty) then 0.0 else pre(level)) + fill_amt;
-- tel;

-- empty buckets e and e+1 each round
node game(i1, i2, i3, i4, i5 : real; e : int) returns (ok : bool);
var
  b1, b2, b3, b4, b5 : real;
let
  assert i1 >= 0.0 and i2 >= 0.0 and i3 >= 0.0 and i4 >= 0.0 and i5 >= 0.0;
  assert i1 + i2 + i3 + i4 + i5 = 1.0;

  b1 = 0.0 -> (if (e = 5 or e = 1) then i1 else (pre(b1) + i1)) ;
  b2 = 0.0 -> (if (e = 1 or e = 2) then i2 else (pre(b2) + i2)) ;
  b3 = 0.0 -> (if (e = 2 or e = 3) then i3 else (pre(b3) + i3)) ;
  b4 = 0.0 -> (if (e = 3 or e = 4) then i4 else (pre(b4) + i4)) ;
  b5 = 0.0 -> (if (e = 4 or e = 5) then i5 else (pre(b5) + i5)) ;

  ok = b1 <= C and b2 <= C and b3 <= C and b4 <= C and b5 <= C;

  -- MWW: I don't think that this is necessary.
  -- and
  --  (e = 1 or e = 2 or e = 3 or e = 4 or e = 5);

  --%REALIZABLE i1, i2, i3, i4, i5;
  --%PROPERTY ok;
tel;
