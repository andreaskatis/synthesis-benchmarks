type DATA_TYPES__NumActuators__impl = struct {AILL : int; AILR : int; BRAKE : int; ELLIB : int; ELLOB : int; ELRIB : int; ELROB : int; FLAPLI : int; FLAPLO : int; FLAPRI : int; FLAPRO : int; GEAR : int; RUDLO : int; RUDUP : int; SPLLIB : int; SPLLOB : int; SPLRIB : int; SPLROB : int; STEER : int; THROTL : int; THROTR : int};
type DATA_TYPES__BoolActuators__impl = struct {AILL : bool; AILR : bool; BRAKE : bool; ELLIB : bool; ELLOB : bool; ELRIB : bool; ELROB : bool; FLAPLI : bool; FLAPLO : bool; FLAPRI : bool; FLAPRO : bool; GEAR : bool; RUDLO : bool; RUDUP : bool; SPLLIB : bool; SPLLOB : bool; SPLRIB : bool; SPLROB : bool; STEER : bool; THROTL : bool; THROTR : bool};
type DATA_TYPES__Actuators__impl = struct {AILL : real; AILR : real; BRAKE : real; ELLIB : real; ELLOB : real; ELRIB : real; ELROB : real; FLAPLI : real; FLAPLO : real; FLAPRI : real; FLAPRO : real; GEAR : real; RUDLO : real; RUDUP : real; SPLLIB : real; SPLLOB : real; SPLRIB : real; SPLROB : real; STEER : real; THROTL : real; THROTR : real};

node main(
  acts_in : DATA_TYPES__Actuators__impl;
  acts_ret : DATA_TYPES__Actuators__impl;
  acts_claw_fail : DATA_TYPES__BoolActuators__impl;
  acts_isas_fail : DATA_TYPES__BoolActuators__impl;
  acts_ccdl_num_fail : DATA_TYPES__NumActuators__impl;
  ccdl_frame_count : int;
  ccdl_failed : bool;
  num_valid_acts : DATA_TYPES__NumActuators__impl;
  osas_failed : bool;
  act_claw_fails : bool;
  fail_counts : DATA_TYPES__NumActuators__impl;
  act_gains : DATA_TYPES__Actuators__impl;
  acts_out : DATA_TYPES__Actuators__impl;
  acts_fail : DATA_TYPES__BoolActuators__impl;
  sovs1 : DATA_TYPES__BoolActuators__impl;
  sovs2 : DATA_TYPES__BoolActuators__impl
) returns (

);
var
  __GUARANTEE0 : bool;
  __GUARANTEE1 : bool;
  __GUARANTEE2 : bool;
  __GUARANTEE3 : bool;
  __GUARANTEE4 : bool;
  __GUARANTEE5 : bool;
  __GUARANTEE6 : bool;
  __GUARANTEE7 : bool;
  __GUARANTEE8 : bool;
  __GUARANTEE9 : bool;
let
  --%MAIN;
  __GUARANTEE0 = OSAS_S_110__req(acts_out, acts_ret, fail_counts);

  __GUARANTEE1 = OSAS_S_120__req(acts_out, acts_ret, acts_fail);

  __GUARANTEE2 = OSAS_S_140__req(acts_out, acts_fail);

  __GUARANTEE3 = (true -> (ccdl_failed = (true -> (ccdl_frame_count <> ((pre ccdl_frame_count) + 1)))));

  __GUARANTEE4 = OSAS_S_170__req(act_gains, ccdl_failed);

  __GUARANTEE5 = OSAS_S_180__req(act_gains, num_valid_acts, ccdl_failed);

  __GUARANTEE6 = OSAS_S_190__req(acts_in, acts_out, act_gains);

  __GUARANTEE7 = OSAS_S_240__req(act_gains, osas_failed);

  __GUARANTEE8 = OSAS_S_250__req(act_gains, act_claw_fails);

  __GUARANTEE9 = OSAS_S_210_220_230__req(sovs1, sovs2, acts_isas_fail, acts_fail, acts_ccdl_num_fail);

  --%PROPERTY __GUARANTEE0;
  --%PROPERTY __GUARANTEE1;
  --%PROPERTY __GUARANTEE2;
  --%PROPERTY __GUARANTEE3;
  --%PROPERTY __GUARANTEE4;
  --%PROPERTY __GUARANTEE5;
  --%PROPERTY __GUARANTEE6;
  --%PROPERTY __GUARANTEE7;
  --%PROPERTY __GUARANTEE8;
  --%PROPERTY __GUARANTEE9;

  --%REALIZABLE acts_in, acts_ret, acts_claw_fail, acts_isas_fail, acts_ccdl_num_fail, ccdl_frame_count, ccdl_failed, num_valid_acts, osas_failed, act_claw_fails;

tel;

node OSAS_S_100__req(
  act : real;
  act_ret : real
) returns (
  return : bool
);
var
  pre_act : real;
let
  pre_act = (0.0 -> (pre act));

  return = ((act_ret > (1.025 * pre_act)) or (act_ret < (0.975 * pre_act)));

tel;

node RUN_LENGTH__f(
  sig : bool
) returns (
  count : int
);
let
  count = (if sig then ((0 -> (pre count)) + 1) else 0);

tel;

node OSAS_S_110__req_helper(
  act : real;
  act_ret : real;
  fail_count : int
) returns (
  res : bool
);
var
  fault : bool;
  previous_fail_count : int;
let
  fault = OSAS_S_100__req(act, act_ret);

  previous_fail_count = (0 -> (pre fail_count));

  res = (fail_count = (if fault then (previous_fail_count + 1) else (if (RUN_LENGTH__f((not fault)) >= 4) then 0 else previous_fail_count)));

tel;

node OSAS_S_110__req(
  acts : DATA_TYPES__Actuators__impl;
  acts_ret : DATA_TYPES__Actuators__impl;
  fail_counts : DATA_TYPES__NumActuators__impl
) returns (
  res : bool
);
let
  res = ((((((((((((((((((((OSAS_S_110__req_helper(acts.AILL, acts_ret.AILL, fail_counts.AILL) and OSAS_S_110__req_helper(acts.AILR, acts_ret.AILR, fail_counts.AILR)) and OSAS_S_110__req_helper(acts.BRAKE, acts_ret.BRAKE, fail_counts.BRAKE)) and OSAS_S_110__req_helper(acts.ELLIB, acts_ret.ELLIB, fail_counts.ELLIB)) and OSAS_S_110__req_helper(acts.ELLOB, acts_ret.ELLOB, fail_counts.ELLOB)) and OSAS_S_110__req_helper(acts.ELRIB, acts_ret.ELRIB, fail_counts.ELRIB)) and OSAS_S_110__req_helper(acts.ELROB, acts_ret.ELROB, fail_counts.ELROB)) and OSAS_S_110__req_helper(acts.FLAPLI, acts_ret.FLAPLI, fail_counts.FLAPLI)) and OSAS_S_110__req_helper(acts.FLAPLO, acts_ret.FLAPLO, fail_counts.FLAPLO)) and OSAS_S_110__req_helper(acts.FLAPRI, acts_ret.FLAPRI, fail_counts.FLAPRI)) and OSAS_S_110__req_helper(acts.FLAPRO, acts_ret.FLAPRO, fail_counts.FLAPRO)) and OSAS_S_110__req_helper(acts.GEAR, acts_ret.GEAR, fail_counts.GEAR)) and OSAS_S_110__req_helper(acts.RUDLO, acts_ret.RUDLO, fail_counts.RUDLO)) and OSAS_S_110__req_helper(acts.RUDUP, acts_ret.RUDUP, fail_counts.RUDUP)) and OSAS_S_110__req_helper(acts.SPLLIB, acts_ret.SPLLIB, fail_counts.SPLLIB)) and OSAS_S_110__req_helper(acts.SPLLOB, acts_ret.SPLLOB, fail_counts.SPLLOB)) and OSAS_S_110__req_helper(acts.SPLRIB, acts_ret.SPLRIB, fail_counts.SPLRIB)) and OSAS_S_110__req_helper(acts.SPLROB, acts_ret.SPLROB, fail_counts.SPLROB)) and OSAS_S_110__req_helper(acts.STEER, acts_ret.STEER, fail_counts.STEER)) and OSAS_S_110__req_helper(acts.THROTR, acts_ret.THROTR, fail_counts.THROTR)) and OSAS_S_110__req_helper(acts.THROTL, acts_ret.THROTL, fail_counts.THROTL));

tel;

node OCCURRED__f(
  condition : bool
) returns (
  holds : bool
);
let
  holds = (condition or (condition -> (pre holds)));

tel;

node OSAS_S_120__req_helper(
  act : real;
  act_ret : real;
  fail : bool
) returns (
  res : bool
);
let
  res = (fail = (if OCCURRED__f((RUN_LENGTH__f(OSAS_S_100__req(act, act_ret)) >= 5)) then true else (false -> (pre fail))));

tel;

node OSAS_S_120__req(
  acts : DATA_TYPES__Actuators__impl;
  acts_ret : DATA_TYPES__Actuators__impl;
  fails : DATA_TYPES__BoolActuators__impl
) returns (
  res : bool
);
let
  res = ((((((((((((((((((((OSAS_S_120__req_helper(acts.AILL, acts_ret.AILL, fails.AILL) and OSAS_S_120__req_helper(acts.AILR, acts_ret.AILR, fails.AILR)) and OSAS_S_120__req_helper(acts.BRAKE, acts_ret.BRAKE, fails.BRAKE)) and OSAS_S_120__req_helper(acts.ELLIB, acts_ret.ELLIB, fails.ELLIB)) and OSAS_S_120__req_helper(acts.ELLOB, acts_ret.ELLOB, fails.ELLOB)) and OSAS_S_120__req_helper(acts.ELRIB, acts_ret.ELRIB, fails.ELRIB)) and OSAS_S_120__req_helper(acts.ELROB, acts_ret.ELROB, fails.ELROB)) and OSAS_S_120__req_helper(acts.FLAPLI, acts_ret.FLAPLI, fails.FLAPLI)) and OSAS_S_120__req_helper(acts.FLAPLO, acts_ret.FLAPLO, fails.FLAPLO)) and OSAS_S_120__req_helper(acts.FLAPRI, acts_ret.FLAPRI, fails.FLAPRI)) and OSAS_S_120__req_helper(acts.FLAPRO, acts_ret.FLAPRO, fails.FLAPRO)) and OSAS_S_120__req_helper(acts.GEAR, acts_ret.GEAR, fails.GEAR)) and OSAS_S_120__req_helper(acts.RUDLO, acts_ret.RUDLO, fails.RUDLO)) and OSAS_S_120__req_helper(acts.RUDUP, acts_ret.RUDUP, fails.RUDUP)) and OSAS_S_120__req_helper(acts.SPLLIB, acts_ret.SPLLIB, fails.SPLLIB)) and OSAS_S_120__req_helper(acts.SPLLOB, acts_ret.SPLLOB, fails.SPLLOB)) and OSAS_S_120__req_helper(acts.SPLRIB, acts_ret.SPLRIB, fails.SPLRIB)) and OSAS_S_120__req_helper(acts.SPLROB, acts_ret.SPLROB, fails.SPLROB)) and OSAS_S_120__req_helper(acts.STEER, acts_ret.STEER, fails.STEER)) and OSAS_S_120__req_helper(acts.THROTR, acts_ret.THROTR, fails.THROTR)) and OSAS_S_120__req_helper(acts.THROTL, acts_ret.THROTL, fails.THROTL));

tel;

node OSAS_S_140__req_helper(
  act : real;
  fail : bool
) returns (
  res : bool
);
let
  res = (fail => (act = 0.0));

tel;

node OSAS_S_140__req(
  acts : DATA_TYPES__Actuators__impl;
  fails : DATA_TYPES__BoolActuators__impl
) returns (
  res : bool
);
let
  res = ((((((((((((((((((((OSAS_S_140__req_helper(acts.AILL, fails.AILL) and OSAS_S_140__req_helper(acts.AILR, fails.AILR)) and OSAS_S_140__req_helper(acts.BRAKE, fails.BRAKE)) and OSAS_S_140__req_helper(acts.ELLIB, fails.ELLIB)) and OSAS_S_140__req_helper(acts.ELLOB, fails.ELLOB)) and OSAS_S_140__req_helper(acts.ELRIB, fails.ELRIB)) and OSAS_S_140__req_helper(acts.ELROB, fails.ELROB)) and OSAS_S_140__req_helper(acts.FLAPLI, fails.FLAPLI)) and OSAS_S_140__req_helper(acts.FLAPLO, fails.FLAPLO)) and OSAS_S_140__req_helper(acts.FLAPRI, fails.FLAPRI)) and OSAS_S_140__req_helper(acts.FLAPRO, fails.FLAPRO)) and OSAS_S_140__req_helper(acts.GEAR, fails.GEAR)) and OSAS_S_140__req_helper(acts.RUDLO, fails.RUDLO)) and OSAS_S_140__req_helper(acts.RUDUP, fails.RUDUP)) and OSAS_S_140__req_helper(acts.SPLLIB, fails.SPLLIB)) and OSAS_S_140__req_helper(acts.SPLLOB, fails.SPLLOB)) and OSAS_S_140__req_helper(acts.SPLRIB, fails.SPLRIB)) and OSAS_S_140__req_helper(acts.SPLROB, fails.SPLROB)) and OSAS_S_140__req_helper(acts.STEER, fails.STEER)) and OSAS_S_140__req_helper(acts.THROTR, fails.THROTR)) and OSAS_S_140__req_helper(acts.THROTL, fails.THROTL));

tel;

node OSAS_S_170__req_helper(
  act_gain : real;
  ccdl_failed : bool
) returns (
  res : bool
);
let
  res = (ccdl_failed => (act_gain = 1.0));

tel;

node OSAS_S_170__req(
  acts_gain : DATA_TYPES__Actuators__impl;
  ccdl_failed : bool
) returns (
  res : bool
);
let
  res = ((((((((((((((((((((OSAS_S_170__req_helper(acts_gain.AILL, ccdl_failed) and OSAS_S_170__req_helper(acts_gain.AILR, ccdl_failed)) and OSAS_S_170__req_helper(acts_gain.BRAKE, ccdl_failed)) and OSAS_S_170__req_helper(acts_gain.ELLIB, ccdl_failed)) and OSAS_S_170__req_helper(acts_gain.ELLOB, ccdl_failed)) and OSAS_S_170__req_helper(acts_gain.ELRIB, ccdl_failed)) and OSAS_S_170__req_helper(acts_gain.ELROB, ccdl_failed)) and OSAS_S_170__req_helper(acts_gain.FLAPLI, ccdl_failed)) and OSAS_S_170__req_helper(acts_gain.FLAPLO, ccdl_failed)) and OSAS_S_170__req_helper(acts_gain.FLAPRI, ccdl_failed)) and OSAS_S_170__req_helper(acts_gain.FLAPRO, ccdl_failed)) and OSAS_S_170__req_helper(acts_gain.GEAR, ccdl_failed)) and OSAS_S_170__req_helper(acts_gain.RUDLO, ccdl_failed)) and OSAS_S_170__req_helper(acts_gain.RUDUP, ccdl_failed)) and OSAS_S_170__req_helper(acts_gain.SPLLIB, ccdl_failed)) and OSAS_S_170__req_helper(acts_gain.SPLLOB, ccdl_failed)) and OSAS_S_170__req_helper(acts_gain.SPLRIB, ccdl_failed)) and OSAS_S_170__req_helper(acts_gain.SPLROB, ccdl_failed)) and OSAS_S_170__req_helper(acts_gain.STEER, ccdl_failed)) and OSAS_S_170__req_helper(acts_gain.THROTR, ccdl_failed)) and OSAS_S_170__req_helper(acts_gain.THROTL, ccdl_failed));

tel;

node OSAS_S_180__actuator_gain(
  num_valid : int
) returns (
  result : real
);
let
  result = (if (num_valid = 3) then 1.0 else (if (num_valid = 2) then (4.0 / 3.0) else (if (num_valid = 1) then 2.0 else (if (num_valid = 0) then 4.0 else 1.0))));

tel;

node OSAS_S_180__req_helper(
  act_gain : real;
  num_valid : int;
  ccdl_failed : bool
) returns (
  res : bool
);
let
  res = ((not ccdl_failed) => (act_gain = OSAS_S_180__actuator_gain(num_valid)));

tel;

node OSAS_S_180__req(
  acts_gain : DATA_TYPES__Actuators__impl;
  acts_num_valid : DATA_TYPES__NumActuators__impl;
  ccdl_failed : bool
) returns (
  res : bool
);
let
  res = ((((((((((((((((((((OSAS_S_180__req_helper(acts_gain.AILL, acts_num_valid.AILL, ccdl_failed) and OSAS_S_180__req_helper(acts_gain.AILR, acts_num_valid.AILR, ccdl_failed)) and OSAS_S_180__req_helper(acts_gain.BRAKE, acts_num_valid.BRAKE, ccdl_failed)) and OSAS_S_180__req_helper(acts_gain.ELLIB, acts_num_valid.ELLIB, ccdl_failed)) and OSAS_S_180__req_helper(acts_gain.ELLOB, acts_num_valid.ELLOB, ccdl_failed)) and OSAS_S_180__req_helper(acts_gain.ELRIB, acts_num_valid.ELRIB, ccdl_failed)) and OSAS_S_180__req_helper(acts_gain.ELROB, acts_num_valid.ELROB, ccdl_failed)) and OSAS_S_180__req_helper(acts_gain.FLAPLI, acts_num_valid.FLAPLI, ccdl_failed)) and OSAS_S_180__req_helper(acts_gain.FLAPLO, acts_num_valid.FLAPLO, ccdl_failed)) and OSAS_S_180__req_helper(acts_gain.FLAPRI, acts_num_valid.FLAPRI, ccdl_failed)) and OSAS_S_180__req_helper(acts_gain.FLAPRO, acts_num_valid.FLAPRO, ccdl_failed)) and OSAS_S_180__req_helper(acts_gain.GEAR, acts_num_valid.GEAR, ccdl_failed)) and OSAS_S_180__req_helper(acts_gain.RUDLO, acts_num_valid.RUDLO, ccdl_failed)) and OSAS_S_180__req_helper(acts_gain.RUDUP, acts_num_valid.RUDUP, ccdl_failed)) and OSAS_S_180__req_helper(acts_gain.SPLLIB, acts_num_valid.SPLLIB, ccdl_failed)) and OSAS_S_180__req_helper(acts_gain.SPLLOB, acts_num_valid.SPLLOB, ccdl_failed)) and OSAS_S_180__req_helper(acts_gain.SPLRIB, acts_num_valid.SPLRIB, ccdl_failed)) and OSAS_S_180__req_helper(acts_gain.SPLROB, acts_num_valid.SPLROB, ccdl_failed)) and OSAS_S_180__req_helper(acts_gain.STEER, acts_num_valid.STEER, ccdl_failed)) and OSAS_S_180__req_helper(acts_gain.THROTR, acts_num_valid.THROTR, ccdl_failed)) and OSAS_S_180__req_helper(acts_gain.THROTL, acts_num_valid.THROTL, ccdl_failed));

tel;

node OSAS_S_190__req_helper(
  act_in : real;
  act_out : real;
  act_gain : real
) returns (
  res : bool
);
let
  res = (if (act_gain = 1.0) then (act_out = act_in) else (if (act_gain = 2.0) then (act_out = (act_in * 2.0)) else (if (act_gain = (4.0 / 3.0)) then (act_out = ((act_in * 4.0) / 3.0)) else (if (act_gain = 4.0) then (act_out = (act_in * 4.0)) else (act_out = 0.0)))));

tel;

node OSAS_S_190__req(
  acts_in : DATA_TYPES__Actuators__impl;
  acts_out : DATA_TYPES__Actuators__impl;
  acts_gain : DATA_TYPES__Actuators__impl
) returns (
  res : bool
);
let
  res = ((((((((((((((((((((OSAS_S_190__req_helper(acts_in.AILL, acts_out.AILL, acts_gain.AILL) and OSAS_S_190__req_helper(acts_in.AILR, acts_out.AILR, acts_gain.AILR)) and OSAS_S_190__req_helper(acts_in.BRAKE, acts_out.BRAKE, acts_gain.BRAKE)) and OSAS_S_190__req_helper(acts_in.ELLIB, acts_out.ELLIB, acts_gain.ELLIB)) and OSAS_S_190__req_helper(acts_in.ELLOB, acts_out.ELLOB, acts_gain.ELLOB)) and OSAS_S_190__req_helper(acts_in.ELRIB, acts_out.ELRIB, acts_gain.ELRIB)) and OSAS_S_190__req_helper(acts_in.ELROB, acts_out.ELROB, acts_gain.ELROB)) and OSAS_S_190__req_helper(acts_in.FLAPLI, acts_out.FLAPLI, acts_gain.FLAPLI)) and OSAS_S_190__req_helper(acts_in.FLAPLO, acts_out.FLAPLO, acts_gain.FLAPLO)) and OSAS_S_190__req_helper(acts_in.FLAPRI, acts_out.FLAPRI, acts_gain.FLAPRI)) and OSAS_S_190__req_helper(acts_in.FLAPRO, acts_out.FLAPRO, acts_gain.FLAPRO)) and OSAS_S_190__req_helper(acts_in.GEAR, acts_out.GEAR, acts_gain.GEAR)) and OSAS_S_190__req_helper(acts_in.RUDLO, acts_out.RUDLO, acts_gain.RUDLO)) and OSAS_S_190__req_helper(acts_in.RUDUP, acts_out.RUDUP, acts_gain.RUDUP)) and OSAS_S_190__req_helper(acts_in.SPLLIB, acts_out.SPLLIB, acts_gain.SPLLIB)) and OSAS_S_190__req_helper(acts_in.SPLLOB, acts_out.SPLLOB, acts_gain.SPLLOB)) and OSAS_S_190__req_helper(acts_in.SPLRIB, acts_out.SPLRIB, acts_gain.SPLRIB)) and OSAS_S_190__req_helper(acts_in.SPLROB, acts_out.SPLROB, acts_gain.SPLROB)) and OSAS_S_190__req_helper(acts_in.STEER, acts_out.STEER, acts_gain.STEER)) and OSAS_S_190__req_helper(acts_in.THROTR, acts_out.THROTR, acts_gain.THROTR)) and OSAS_S_190__req_helper(acts_in.THROTL, acts_out.THROTL, acts_gain.THROTL));

tel;

node OSAS_S_240__req_helper(
  act_gain : real;
  osas_failed : bool
) returns (
  res : bool
);
let
  res = (osas_failed => (act_gain = 0.0));

tel;

node OSAS_S_240__req(
  acts_gain : DATA_TYPES__Actuators__impl;
  osas_failed : bool
) returns (
  res : bool
);
let
  res = ((((((((((((((((((((OSAS_S_240__req_helper(acts_gain.AILL, osas_failed) and OSAS_S_240__req_helper(acts_gain.AILR, osas_failed)) and OSAS_S_240__req_helper(acts_gain.BRAKE, osas_failed)) and OSAS_S_240__req_helper(acts_gain.ELLIB, osas_failed)) and OSAS_S_240__req_helper(acts_gain.ELLOB, osas_failed)) and OSAS_S_240__req_helper(acts_gain.ELRIB, osas_failed)) and OSAS_S_240__req_helper(acts_gain.ELROB, osas_failed)) and OSAS_S_240__req_helper(acts_gain.FLAPLI, osas_failed)) and OSAS_S_240__req_helper(acts_gain.FLAPLO, osas_failed)) and OSAS_S_240__req_helper(acts_gain.FLAPRI, osas_failed)) and OSAS_S_240__req_helper(acts_gain.FLAPRO, osas_failed)) and OSAS_S_240__req_helper(acts_gain.GEAR, osas_failed)) and OSAS_S_240__req_helper(acts_gain.RUDLO, osas_failed)) and OSAS_S_240__req_helper(acts_gain.RUDUP, osas_failed)) and OSAS_S_240__req_helper(acts_gain.SPLLIB, osas_failed)) and OSAS_S_240__req_helper(acts_gain.SPLLOB, osas_failed)) and OSAS_S_240__req_helper(acts_gain.SPLRIB, osas_failed)) and OSAS_S_240__req_helper(acts_gain.SPLROB, osas_failed)) and OSAS_S_240__req_helper(acts_gain.STEER, osas_failed)) and OSAS_S_240__req_helper(acts_gain.THROTR, osas_failed)) and OSAS_S_240__req_helper(acts_gain.THROTL, osas_failed));

tel;

node OSAS_S_250__req_helper(
  act_gain : real;
  ctrl_laws_failed : bool
) returns (
  res : bool
);
let
  res = (ctrl_laws_failed => (act_gain = 0.0));

tel;

node OSAS_S_250__req(
  acts_gain : DATA_TYPES__Actuators__impl;
  ctrl_laws_failed : bool
) returns (
  res : bool
);
let
  res = ((((((((((((((((((((OSAS_S_250__req_helper(acts_gain.AILL, ctrl_laws_failed) and OSAS_S_250__req_helper(acts_gain.AILR, ctrl_laws_failed)) and OSAS_S_250__req_helper(acts_gain.BRAKE, ctrl_laws_failed)) and OSAS_S_250__req_helper(acts_gain.ELLIB, ctrl_laws_failed)) and OSAS_S_250__req_helper(acts_gain.ELLOB, ctrl_laws_failed)) and OSAS_S_250__req_helper(acts_gain.ELRIB, ctrl_laws_failed)) and OSAS_S_250__req_helper(acts_gain.ELROB, ctrl_laws_failed)) and OSAS_S_250__req_helper(acts_gain.FLAPLI, ctrl_laws_failed)) and OSAS_S_250__req_helper(acts_gain.FLAPLO, ctrl_laws_failed)) and OSAS_S_250__req_helper(acts_gain.FLAPRI, ctrl_laws_failed)) and OSAS_S_250__req_helper(acts_gain.FLAPRO, ctrl_laws_failed)) and OSAS_S_250__req_helper(acts_gain.GEAR, ctrl_laws_failed)) and OSAS_S_250__req_helper(acts_gain.RUDLO, ctrl_laws_failed)) and OSAS_S_250__req_helper(acts_gain.RUDUP, ctrl_laws_failed)) and OSAS_S_250__req_helper(acts_gain.SPLLIB, ctrl_laws_failed)) and OSAS_S_250__req_helper(acts_gain.SPLLOB, ctrl_laws_failed)) and OSAS_S_250__req_helper(acts_gain.SPLRIB, ctrl_laws_failed)) and OSAS_S_250__req_helper(acts_gain.SPLROB, ctrl_laws_failed)) and OSAS_S_250__req_helper(acts_gain.STEER, ctrl_laws_failed)) and OSAS_S_250__req_helper(acts_gain.THROTR, ctrl_laws_failed)) and OSAS_S_250__req_helper(acts_gain.THROTL, ctrl_laws_failed));

tel;

node OSAS_S_210_220_230__req_helper(
  sov1 : bool;
  sov2 : bool;
  isas_fail : bool;
  latched_fail : bool;
  ccdl_num_fail : int
) returns (
  res : bool
);
let
  res = (((sov1 = sov2) and (sov1 = true)) -> (if isas_fail then false else (if (latched_fail and (ccdl_num_fail >= 2)) then false else (pre sov1))));

tel;

node OSAS_S_210_220_230__req(
  sovs1 : DATA_TYPES__BoolActuators__impl;
  sovs2 : DATA_TYPES__BoolActuators__impl;
  isas_fails : DATA_TYPES__BoolActuators__impl;
  latched_fails : DATA_TYPES__BoolActuators__impl;
  ccdl_num_fails : DATA_TYPES__NumActuators__impl
) returns (
  res : bool
);
let
  res = ((((((((((((((((((((OSAS_S_210_220_230__req_helper(sovs1.AILL, sovs2.AILL, isas_fails.AILL, latched_fails.AILL, ccdl_num_fails.AILL) and OSAS_S_210_220_230__req_helper(sovs1.AILR, sovs2.AILR, isas_fails.AILR, latched_fails.AILR, ccdl_num_fails.AILR)) and OSAS_S_210_220_230__req_helper(sovs1.BRAKE, sovs2.BRAKE, isas_fails.BRAKE, latched_fails.BRAKE, ccdl_num_fails.BRAKE)) and OSAS_S_210_220_230__req_helper(sovs1.ELLIB, sovs2.ELLIB, isas_fails.ELLIB, latched_fails.ELLIB, ccdl_num_fails.ELLIB)) and OSAS_S_210_220_230__req_helper(sovs1.ELLOB, sovs2.ELLOB, isas_fails.ELLOB, latched_fails.ELLOB, ccdl_num_fails.ELLOB)) and OSAS_S_210_220_230__req_helper(sovs1.ELRIB, sovs2.ELRIB, isas_fails.ELRIB, latched_fails.ELRIB, ccdl_num_fails.ELRIB)) and OSAS_S_210_220_230__req_helper(sovs1.ELROB, sovs2.ELROB, isas_fails.ELROB, latched_fails.ELROB, ccdl_num_fails.ELROB)) and OSAS_S_210_220_230__req_helper(sovs1.FLAPLI, sovs2.FLAPLI, isas_fails.FLAPLI, latched_fails.FLAPLI, ccdl_num_fails.FLAPLI)) and OSAS_S_210_220_230__req_helper(sovs1.FLAPLO, sovs2.FLAPLO, isas_fails.FLAPLO, latched_fails.FLAPLO, ccdl_num_fails.FLAPLO)) and OSAS_S_210_220_230__req_helper(sovs1.FLAPRI, sovs2.FLAPRI, isas_fails.FLAPRI, latched_fails.FLAPRI, ccdl_num_fails.FLAPRI)) and OSAS_S_210_220_230__req_helper(sovs1.FLAPRO, sovs2.FLAPRO, isas_fails.FLAPRO, latched_fails.FLAPRO, ccdl_num_fails.FLAPRO)) and OSAS_S_210_220_230__req_helper(sovs1.GEAR, sovs2.GEAR, isas_fails.GEAR, latched_fails.GEAR, ccdl_num_fails.GEAR)) and OSAS_S_210_220_230__req_helper(sovs1.RUDLO, sovs2.RUDLO, isas_fails.RUDLO, latched_fails.RUDLO, ccdl_num_fails.RUDLO)) and OSAS_S_210_220_230__req_helper(sovs1.RUDUP, sovs2.RUDUP, isas_fails.RUDUP, latched_fails.RUDUP, ccdl_num_fails.RUDUP)) and OSAS_S_210_220_230__req_helper(sovs1.SPLLIB, sovs2.SPLLIB, isas_fails.SPLLIB, latched_fails.SPLLIB, ccdl_num_fails.SPLLIB)) and OSAS_S_210_220_230__req_helper(sovs1.SPLLOB, sovs2.SPLLOB, isas_fails.SPLLOB, latched_fails.SPLLOB, ccdl_num_fails.SPLLOB)) and OSAS_S_210_220_230__req_helper(sovs1.SPLRIB, sovs2.SPLRIB, isas_fails.SPLRIB, latched_fails.SPLRIB, ccdl_num_fails.SPLRIB)) and OSAS_S_210_220_230__req_helper(sovs1.SPLROB, sovs2.SPLROB, isas_fails.SPLROB, latched_fails.SPLROB, ccdl_num_fails.SPLROB)) and OSAS_S_210_220_230__req_helper(sovs1.STEER, sovs2.STEER, isas_fails.STEER, latched_fails.STEER, ccdl_num_fails.STEER)) and OSAS_S_210_220_230__req_helper(sovs1.THROTR, sovs2.THROTR, isas_fails.THROTR, latched_fails.THROTR, ccdl_num_fails.THROTR)) and OSAS_S_210_220_230__req_helper(sovs1.THROTL, sovs2.THROTL, isas_fails.THROTL, latched_fails.THROTL, ccdl_num_fails.THROTL));

tel;

